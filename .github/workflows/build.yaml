on: [push]
jobs:
  build:
    strategy:
      matrix:
        kubectl_version: [1.31.0, 1.31.2]
        helm_version: [3.14.0, 3.16.3]
        aws_cli_version: [2.17.31, 2.21.0]
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: write
      attestations: write
      id-token: write
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata (tags, labels) for Docker.io
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: noose/kubectl-helm-aws
        tags: ${{ matrix.kubectl_version }}-${{ matrix.helm_version }}-${{ matrix.aws_cli_version }}

    - name: Extract metadata (tags, labels) for ghcr.io
      id: meta-ghcr
      uses: docker/metadata-action@v5
      with:
        images: ghcr.io/noose/kubectl-helm-aws
        tags: ${{ matrix.kubectl_version }}-${{ matrix.helm_version }}-${{ matrix.aws_cli_version }}

    - name: Log in to GitHub Container Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Update action.yaml with version information
      run: |
        VERSION_TAG="${{ matrix.kubectl_version }}-${{ matrix.helm_version }}-${{ matrix.aws_cli_version }}"
        sed -i "s|image:.*|image: 'docker://ghcr.io/noose/kubectl-helm-awscli:${VERSION_TAG}'|" action.yaml
        git checkout -b "$VERSION_TAG"
        git config user.name "GitHub Actions"
        git config user.email "actions@github.com"
        git commit -am "Update action.yaml with image version $VERSION_TAG"
        git tag -a "v$VERSION_TAG" -m "Release $VERSION_TAG"
        git push origin "v$VERSION_TAG" # tag
        git push origin "$VERSION_TAG" # branch

    - name: Build and push Docker image - docker.io
      id: push
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          AWS_CLI_VERSION=${{ matrix.aws_cli_version }}
          KUBECTL_VERSION=${{ matrix.kubectl_version }}
          HELM_VERSION=${{ matrix.helm_version }}

    - name: Build and push Docker image - ghcr.io
      id: push-ghcr
      uses: docker/build-push-action@v6
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ steps.meta-ghcr.outputs.tags }}
        labels: ${{ steps.meta-ghcr.outputs.labels }}
        build-args: |
          AWS_CLI_VERSION=${{ matrix.aws_cli_version }}
          KUBECTL_VERSION=${{ matrix.kubectl_version }}
          HELM_VERSION=${{ matrix.helm_version }}

    - name: Generate artifact attestation
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: docker.io/noose/kubectl-helm-aws
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true

    - name: Generate artifact attestation - ghcr.io
      uses: actions/attest-build-provenance@v1
      with:
        subject-name: ghcr.io/noose/kubectl-helm-awscli
        subject-digest: ${{ steps.push-ghcr.outputs.digest }}
        push-to-registry: true

    - name: Create GitHub Release
      uses: ncipollo/release-action@v1.14.0
      with:
        tag: v${{ matrix.kubectl_version }}-${{ matrix.helm_version }}-${{ matrix.aws_cli_version }}
        name: v${{ matrix.kubectl_version }}-${{ matrix.helm_version }}-${{ matrix.aws_cli_version }}
        makeLatest: 'legacy'
        body: |
          Release for:
           * kubectl v${{ matrix.kubectl_version }}
           * helm v${{ matrix.helm_version }}
           * AWS CLI v${{ matrix.aws_cli_version }}

        draft: false
        prerelease: false
